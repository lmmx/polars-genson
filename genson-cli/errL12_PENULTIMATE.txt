Schema inference config: SchemaInferenceConfig {
    ignore_outer_array: true,
    delimiter: None,
    schema_uri: Some(
        "AUTO",
    ),
    map_threshold: 0,
    map_max_required_keys: None,
    unify_maps: true,
    no_unify: {
... (9 lines truncated) ...
    no_root_map: true,
    avro: true,
    debug: true,
    verbosity: Normal,
}

rewrite_objects(field_name=None, schema={"$schema":"http://json-schema.org/schema#","properties":{"claims":{"properties":{"P279":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3365":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P3911":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P4390":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P4390"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P1343":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}}},"required":["P1343","P279","P3365","P3911"],"type":"object"}},"required":["claims"],"type":"object"})
Checking homogeneity for field "root" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0:
{
  "properties": {
    "P279": {
      "type": "array",
      "items": {
        "properties": {
...(481 lines omitted)...
    "P279",
    "P3365",
    "P3911"
  ],
  "type": "object"
}
Schemas are homogeneous after normalisation
Unified schema contains anyOf, processing unions first
anyOf unification: promoting scalars for field 'labels'
labels: All schemas are records, attempting record unification
labels: Attempting to unify 2 record schemas
labels: Record schemas unified successfully
Successfully unified anyOf schemas
Checking if should convert to map: above_threshold=true, unified_schema=Some
Skipping map conversion: is root and no_root_map=true
Nested value recursion: claims
rewrite_objects(field_name=Some("claims"), schema={"properties":{"P279":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3365":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P3911":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P4390":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P4390"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P1343":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}}},"required":["P1343","P279","P3365","P3911"],"type":"object"})
Checking homogeneity for field "claims" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
claims: All schemas are records, attempting record unification
claims: Attempting to unify 4 record schemas
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Promoting scalar on new side: wrapping string into object under key `datavalue__string`
claims.mainsnak.datavalue: All schemas are records, attempting record unification
claims.mainsnak.datavalue: Attempting to unify 2 record schemas
claims.mainsnak.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Promoting scalar on new side: wrapping string into object under key `datavalue__string`
claims.mainsnak.datavalue: All schemas are records, attempting record unification
claims.mainsnak.datavalue: Attempting to unify 2 record schemas
claims.mainsnak.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `qualifiers` has conflicting object schemas, attempting recursive unify
claims.qualifiers: All schemas are records, attempting record unification
claims.qualifiers: Attempting to unify 2 record schemas
claims.qualifiers: Record schemas unified successfully
Field `qualifiers` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `datavalue` has conflicting object schemas, attempting recursive unify
claims.mainsnak.datavalue: All schemas are records, attempting record unification
claims.mainsnak.datavalue: Attempting to unify 2 record schemas
claims.mainsnak.datavalue.labels: incompatible types (promotion failed):
  existing=Object {
    "properties": Object {
        "pt": Object {
            "type": String("string"),
        },
        "pl": Object {
            "type": String("string"),
        },
    },
... (22 lines truncated) ...
        Object {
            "type": String("string"),
        },
    ],
}

claims.mainsnak.datavalue: failed to unify
claims.mainsnak: failed to unify
Not converting to map: no unified schema
Nested value recursion: P279
rewrite_objects(field_name=Some("P279"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(47 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"})
Checking homogeneity for field "labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P3365
rewrite_objects(field_name=Some("P3365"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"})
Checking homogeneity for field "qualifiers" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(26 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "qualifiers" to map with schema:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(26 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(50 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(26 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 2 record schemas
Promoting scalar on new side: wrapping string into object under key `datavalue__string`
.datavalue: All schemas are records, attempting record unification
.datavalue: Attempting to unify 2 record schemas
.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
Field `property-labels` has conflicting object schemas, attempting recursive unify
.property-labels: All schemas are records, attempting record unification
.property-labels: Attempting to unify 2 record schemas
.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
: Record schemas unified successfully
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "root" to map with schema:
{
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "property": {
...(72 lines omitted)...
      "datavalue",
      "datatype",
      "property-labels"
    ]
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}}
  Schema 1: {"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: record - {"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]})
Checking homogeneity for field "labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}})
Checking homogeneity for field "property-labels" with 4 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P3911
rewrite_objects(field_name=Some("P3911"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P4390":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P4390"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P4390":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P4390"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "properties": {
    "P4390": {
      "type": "array",
      "items": {
        "properties": {
...(58 lines omitted)...
  },
  "required": [
    "P4390"
  ],
  "type": "object"
}
  Schema 1:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"properties":{"P4390":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P4390"],"type":"object"})
Checking homogeneity for field "qualifiers" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(50 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "qualifiers" to map with schema:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(50 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
  Schema 1: {"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"})
Checking homogeneity for field "labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P1343
rewrite_objects(field_name=Some("P1343"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(50 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: unknown - {"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]})
Found anyOf union with 2 schemas, attempting unification
anyOf unification: promoting scalars for field 'labels'
labels: All schemas are records, attempting record unification
labels: Attempting to unify 2 record schemas
labels: Record schemas unified successfully
Successfully unified anyOf schemas
rewrite_objects(field_name=Some("labels"), schema={"type":"object","properties":{"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}})
Checking homogeneity for field "labels" with 3 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P279":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3365":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P3911":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P1343":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}}})
Other value recursion: P279
rewrite_objects(field_name=Some("P279"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(29 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P3365
rewrite_objects(field_name=Some("P3365"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P3911
rewrite_objects(field_name=Some("P3911"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "object",
  "additionalProperties": {
    "type": "array",
    "items": {
      "properties": {
...(35 lines omitted)...
        "property-labels"
      ],
      "type": "object"
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P1343
rewrite_objects(field_name=Some("P1343"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(29 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"claims":{"properties":{"P279":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3365":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P3911":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P1343":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}}},"required":["P1343","P279","P3365","P3911"],"type":"object"}})
Other value recursion: claims
rewrite_objects(field_name=Some("claims"), schema={"properties":{"P279":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3365":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P3911":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P1343":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}}},"required":["P1343","P279","P3365","P3911"],"type":"object"})
Checking homogeneity for field "claims" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "mainsnak": {
        "properties": {
...(44 lines omitted)...
      "mainsnak",
      "rank"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "mainsnak": {
        "properties": {
...(77 lines omitted)...
      "qualifiers",
      "rank"
    ],
    "type": "object"
  }
}
  Schema 2:
{
  "type": "array",
  "items": {
    "properties": {
      "mainsnak": {
        "properties": {
...(118 lines omitted)...
      "rank",
      "references"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
claims: All schemas are records, attempting record unification
claims: Attempting to unify 4 record schemas
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Promoting scalar on new side: wrapping string into object under key `datavalue__string`
claims.mainsnak.datavalue: All schemas are records, attempting record unification
claims.mainsnak.datavalue: Attempting to unify 2 record schemas
claims.mainsnak.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Promoting scalar on new side: wrapping string into object under key `datavalue__string`
claims.mainsnak.datavalue: All schemas are records, attempting record unification
claims.mainsnak.datavalue: Attempting to unify 2 record schemas
claims.mainsnak.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
claims.qualifiers: incompatible types (promotion failed):
  existing=Object {
    "type": String("object"),
    "additionalProperties": Object {
        "type": String("array"),
        "items": Object {
            "properties": Object {
                "property": Object {
                    "type": String("string"),
                },
... (65 lines truncated) ...
            ],
            "type": String("object"),
        },
    },
}

Not converting to map: no unified schema
Nested value recursion: P279
rewrite_objects(field_name=Some("P279"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(29 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P3365
rewrite_objects(field_name=Some("P3365"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P3911
rewrite_objects(field_name=Some("P3911"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "object",
  "additionalProperties": {
    "type": "array",
    "items": {
      "properties": {
...(35 lines omitted)...
        "property-labels"
      ],
      "type": "object"
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P1343
rewrite_objects(field_name=Some("P1343"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(29 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P279":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3365":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P3911":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P1343":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}}})
Other value recursion: P279
rewrite_objects(field_name=Some("P279"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(29 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P3365
rewrite_objects(field_name=Some("P3365"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P3911
rewrite_objects(field_name=Some("P3911"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "object",
  "additionalProperties": {
    "type": "array",
    "items": {
      "properties": {
...(35 lines omitted)...
        "property-labels"
      ],
      "type": "object"
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P1343
rewrite_objects(field_name=Some("P1343"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(29 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Processed 1 JSON object(s)
