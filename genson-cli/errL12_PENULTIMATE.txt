Schema inference config: SchemaInferenceConfig {
    ignore_outer_array: true,
    delimiter: None,
    schema_uri: Some(
        "AUTO",
    ),
    map_threshold: 0,
    map_max_required_keys: None,
    unify_maps: true,
    no_unify: {},
    force_field_types: {},
    wrap_scalars: true,
    wrap_root: Some(
        "claims",
    ),
    no_root_map: true,
    avro: false,
    debug: true,
    verbosity: Verbose,
}
rewrite_objects(field_name=None, schema={"$schema":"http://json-schema.org/schema#","properties":{"claims":{"properties":{"P279":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3365":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P3911":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P4390":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P4390"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P1343":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}}},"required":["P1343","P279","P3365","P3911"],"type":"object"}},"required":["claims"],"type":"object"})
Checking homogeneity for field "root" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0:
{
  "properties": {
    "P279": {
      "type": "array",
      "items": {
        "properties": {
...(481 lines omitted)...
    "P279",
    "P3365",
    "P3911"
  ],
  "type": "object"
}
Schemas are homogeneous after normalisation
Unified schema contains anyOf, processing unions first
anyOf unification: promoting scalars for field 'labels'
=== check_unifiable_schemas called with path='labels' and 2 schemas:
  Schema[0]: {"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"}
  Schema[1]: {"type":"object","properties":{"labels__string":{"type":"string"}}}
labels: All schemas are records, attempting record unification
labels: Attempting to unify 2 record schemas
Schema[0] introduces new field `ru`
Schema[0] introduces new field `uk`
Schema[1] introduces new field `labels__string`
Field `ru` missing in 1/2 schemas → making nullable
Field `uk` missing in 1/2 schemas → making nullable
Field `labels__string` missing in 1/2 schemas → making nullable
labels: Record schemas unified successfully
Successfully unified anyOf schemas
Checking if should convert to map: above_threshold=true, unified_schema=Some
Skipping map conversion: is root and no_root_map=true
Nested value recursion: claims
rewrite_objects(field_name=Some("claims"), schema={"properties":{"P279":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3365":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P3911":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P4390":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P4390"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P1343":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}}},"required":["P1343","P279","P3365","P3911"],"type":"object"})
Checking homogeneity for field "claims" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='claims' and 4 schemas:
  Schema[0]: {"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}
  Schema[1]: {"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}
  Schema[2]: {"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P4390":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P4390"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}
  Schema[3]: {"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}
claims: All schemas are records, attempting record unification
claims: Attempting to unify 4 record schemas
Schema[0] introduces new field `mainsnak`
Schema[0] introduces new field `rank`
Field `mainsnak` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='claims.mainsnak' and 2 schemas:
  Schema[0]: {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1]: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Schema[0] introduces new field `property`
Schema[0] introduces new field `datavalue`
Schema[0] introduces new field `datatype`
Schema[0] introduces new field `property-labels`
Field `property` compatible (nullable/non-nullable unification)
Promoting scalar on new side: wrapping string into object under key `datavalue__string`
=== check_unifiable_schemas called with path='claims.mainsnak.datavalue' and 2 schemas:
  Schema[0]: {"properties":{"id":{"type":"string"},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":"object"}},"required":["id","labels"],"type":"object"}
  Schema[1]: {"type":"object","properties":{"datavalue__string":{"type":"string"}}}
claims.mainsnak.datavalue: All schemas are records, attempting record unification
claims.mainsnak.datavalue: Attempting to unify 2 record schemas
Schema[0] introduces new field `id`
Schema[0] introduces new field `labels`
Schema[1] introduces new field `datavalue__string`
Field `id` missing in 1/2 schemas → making nullable
Field `labels` missing in 1/2 schemas → making nullable
Field `datavalue__string` missing in 1/2 schemas → making nullable
claims.mainsnak.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
Field `datatype` compatible (nullable/non-nullable unification)
Field `property-labels` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='claims.mainsnak.property-labels' and 2 schemas:
  Schema[0]: {"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}
  Schema[1]: {"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
Schema[0] introduces new field `en`
Schema[0] introduces new field `ca`
Field `en` compatible (nullable/non-nullable unification)
Schema[1] introduces new field `it`
Field `en` present in all schemas → keeping non-nullable
Field `ca` missing in 1/2 schemas → making nullable
Field `it` missing in 1/2 schemas → making nullable
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
Field `property` present in all schemas → keeping non-nullable
Field `datavalue` present in all schemas → keeping non-nullable
Field `datatype` present in all schemas → keeping non-nullable
Field `property-labels` present in all schemas → keeping non-nullable
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Schema[1] introduces new field `qualifiers`
Field `rank` compatible (nullable/non-nullable unification)
Schema[1] introduces new field `references`
Field `mainsnak` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='claims.mainsnak' and 2 schemas:
  Schema[0]: {"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]}},"required":["en"]}},"required":["property","datavalue","datatype","property-labels"]}
  Schema[1]: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Schema[0] introduces new field `property`
Schema[0] introduces new field `datavalue`
Schema[0] introduces new field `datatype`
Schema[0] introduces new field `property-labels`
Field `property` compatible (nullable/non-nullable unification)
Promoting scalar on new side: wrapping string into object under key `datavalue__string`
=== check_unifiable_schemas called with path='claims.mainsnak.datavalue' and 2 schemas:
  Schema[0]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[1]: {"type":"object","properties":{"datavalue__string":{"type":"string"}}}
claims.mainsnak.datavalue: All schemas are records, attempting record unification
claims.mainsnak.datavalue: Attempting to unify 2 record schemas
Schema[0] introduces new field `id`
Schema[0] introduces new field `labels`
Schema[0] introduces new field `datavalue__string`
Field `datavalue__string` compatible (nullable/non-nullable unification)
Field `datavalue__string` present in all schemas → keeping non-nullable
Field `id` missing in 1/2 schemas → making nullable
Field `labels` missing in 1/2 schemas → making nullable
claims.mainsnak.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
Field `datatype` compatible (nullable/non-nullable unification)
Field `property-labels` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='claims.mainsnak.property-labels' and 2 schemas:
  Schema[0]: {"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]}},"required":["en"]}
  Schema[1]: {"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
Schema[0] introduces new field `en`
Schema[0] introduces new field `ca`
Schema[0] introduces new field `it`
Field `en` compatible (nullable/non-nullable unification)
Schema[1] introduces new field `es`
Field `en` present in all schemas → keeping non-nullable
Field `ca` missing in 1/2 schemas → making nullable
Field `it` missing in 1/2 schemas → making nullable
Field `es` missing in 1/2 schemas → making nullable
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
Field `property` present in all schemas → keeping non-nullable
Field `datavalue` present in all schemas → keeping non-nullable
Field `datatype` present in all schemas → keeping non-nullable
Field `property-labels` present in all schemas → keeping non-nullable
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `qualifiers` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='claims.qualifiers' and 2 schemas:
  Schema[0]: {"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"}
  Schema[1]: {"properties":{"P4390":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P4390"],"type":"object"}
claims.qualifiers: All schemas are records, attempting record unification
claims.qualifiers: Attempting to unify 2 record schemas
Schema[0] introduces new field `P1810`
Schema[1] introduces new field `P4390`
Field `P1810` missing in 1/2 schemas → making nullable
Field `P4390` missing in 1/2 schemas → making nullable
claims.qualifiers: Record schemas unified successfully
Field `qualifiers` unified successfully after recursion
Field `rank` compatible (nullable/non-nullable unification)
Field `mainsnak` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='claims.mainsnak' and 2 schemas:
  Schema[0]: {"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"datavalue__string":{"type":["null","string"]},"id":{"type":["null","string"]},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":["null","object"]}},"required":["datavalue__string"]},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]}},"required":["en"]}},"required":["property","datavalue","datatype","property-labels"]}
  Schema[1]: {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Schema[0] introduces new field `property`
Schema[0] introduces new field `datavalue`
Schema[0] introduces new field `datatype`
Schema[0] introduces new field `property-labels`
Field `property` compatible (nullable/non-nullable unification)
Field `datavalue` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='claims.mainsnak.datavalue' and 2 schemas:
  Schema[0]: {"type":"object","properties":{"datavalue__string":{"type":["null","string"]},"id":{"type":["null","string"]},"labels":{"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":["null","object"]}},"required":["datavalue__string"]}
  Schema[1]: {"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"}
claims.mainsnak.datavalue: All schemas are records, attempting record unification
claims.mainsnak.datavalue: Attempting to unify 2 record schemas
Schema[0] introduces new field `datavalue__string`
Schema[0] introduces new field `id`
Schema[0] introduces new field `labels`
Field `id` compatible (nullable/non-nullable unification)
anyOf unification: promoting scalars for field 'labels'
=== check_unifiable_schemas called with path='labels' and 2 schemas:
  Schema[0]: {"properties":{"ru":{"type":"string"},"uk":{"type":"string"}},"type":"object"}
  Schema[1]: {"type":"object","properties":{"labels__string":{"type":"string"}}}
labels: All schemas are records, attempting record unification
labels: Attempting to unify 2 record schemas
Schema[0] introduces new field `ru`
Schema[0] introduces new field `uk`
Schema[1] introduces new field `labels__string`
Field `ru` missing in 1/2 schemas → making nullable
Field `uk` missing in 1/2 schemas → making nullable
Field `labels__string` missing in 1/2 schemas → making nullable
labels: Record schemas unified successfully
Field `labels` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='claims.mainsnak.datavalue.labels' and 2 schemas:
  Schema[0]: {"properties":{"pt":{"type":"string"},"pl":{"type":"string"}},"required":["pl","pt"],"type":["null","object"]}
  Schema[1]: {"type":"object","properties":{"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}}
claims.mainsnak.datavalue.labels: All schemas are records, attempting record unification
claims.mainsnak.datavalue.labels: Attempting to unify 2 record schemas
Schema[0] introduces new field `pt`
Schema[0] introduces new field `pl`
Schema[1] introduces new field `ru`
Schema[1] introduces new field `uk`
Schema[1] introduces new field `labels__string`
Field `pt` missing in 1/2 schemas → making nullable
Field `pl` missing in 1/2 schemas → making nullable
Field `ru` missing in 1/2 schemas → making nullable
Field `uk` missing in 1/2 schemas → making nullable
Field `labels__string` missing in 1/2 schemas → making nullable
claims.mainsnak.datavalue.labels: Record schemas unified successfully
Field `labels` unified successfully after recursion
Field `id` present in all schemas → keeping non-nullable
Field `labels` present in all schemas → keeping non-nullable
Field `datavalue__string` missing in 1/2 schemas → making nullable
claims.mainsnak.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after recursion
Field `datatype` compatible (nullable/non-nullable unification)
Field `property-labels` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='claims.mainsnak.property-labels' and 2 schemas:
  Schema[0]: {"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]}},"required":["en"]}
  Schema[1]: {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
Schema[0] introduces new field `en`
Schema[0] introduces new field `ca`
Schema[0] introduces new field `it`
Schema[0] introduces new field `es`
Field `en` compatible (nullable/non-nullable unification)
Schema[1] introduces new field `ru`
Field `en` present in all schemas → keeping non-nullable
Field `ca` missing in 1/2 schemas → making nullable
Field `it` missing in 1/2 schemas → making nullable
Field `es` missing in 1/2 schemas → making nullable
Field `ru` missing in 1/2 schemas → making nullable
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
Field `property` present in all schemas → keeping non-nullable
Field `datavalue` present in all schemas → keeping non-nullable
Field `datatype` present in all schemas → keeping non-nullable
Field `property-labels` present in all schemas → keeping non-nullable
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `rank` compatible (nullable/non-nullable unification)
Field `mainsnak` present in all schemas → keeping non-nullable
Field `rank` present in all schemas → keeping non-nullable
Field `qualifiers` missing in 2/4 schemas → making nullable
Field `references` missing in 3/4 schemas → making nullable
claims: Record schemas unified successfully
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "claims" to map with schema:
{
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "mainsnak": {
...(340 lines omitted)...
    "required": [
      "mainsnak",
      "rank"
    ]
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"type":"object","properties":{"mainsnak":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]},"ru":{"type":["null","string"]}},"required":["en"]}},"required":["property","datavalue","datatype","property-labels"]},"rank":{"type":"string"},"qualifiers":{"type":["null","object"],"properties":{"P1810":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4390":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}}},"references":{"type":["null","array"],"items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}},"required":["mainsnak","rank"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"mainsnak":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]},"ru":{"type":["null","string"]}},"required":["en"]}},"required":["property","datavalue","datatype","property-labels"]},"rank":{"type":"string"},"qualifiers":{"type":["null","object"],"properties":{"P1810":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4390":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}}},"references":{"type":["null","array"],"items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}},"required":["mainsnak","rank"]})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]},"ru":{"type":["null","string"]}},"required":["en"]}},"required":["property","datavalue","datatype","property-labels"]}
  Schema[1]: {"type":"string"}
  Schema[2]: {"type":["null","object"],"properties":{"P1810":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4390":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}}}
  Schema[3]: {"type":["null","array"],"items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}
: Mixed schema types not supported for unification
  Schema[0] type: record - {"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]},"ru":{"type":["null","string"]}},"required":["en"]}},"required":["property","datavalue","datatype","property-labels"]}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: record - {"type":["null","object"],"properties":{"P1810":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4390":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}}}
  Schema[3] type: array - {"type":["null","array"],"items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]},"ru":{"type":["null","string"]}},"required":["en"]}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "mainsnak" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]},"ru":{"type":["null","string"]}},"required":["en"]}
  Schema 1:
{
  "type": "object",
  "properties": {
    "id": {
      "type": [
        "null",
...(44 lines omitted)...
  },
  "required": [
    "id",
    "labels"
  ]
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='mainsnak' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]},"ru":{"type":["null","string"]}},"required":["en"]}
mainsnak: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]},"ru":{"type":["null","string"]}},"required":["en"]}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: record - {"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","properties":{"pt":{"type":["null","string"]},"pl":{"type":["null","string"]},"ru":{"type":["null","string"]},"uk":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}})
Checking homogeneity for field "labels" with 5 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","properties":{"en":{"type":"string"},"ca":{"type":["null","string"]},"it":{"type":["null","string"]},"es":{"type":["null","string"]},"ru":{"type":["null","string"]}},"required":["en"]})
Checking homogeneity for field "property-labels" with 5 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":["null","object"],"properties":{"P1810":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4390":{"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}}})
Checking homogeneity for field "qualifiers" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(50 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(26 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='qualifiers' and 2 schemas:
  Schema[0]: {"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}
  Schema[1]: {"type":["null","array"],"items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}
qualifiers: All schemas are arrays, attempting array unification
qualifiers: Attempting to unify 2 array schemas
qualifiers: Array schema[0] items: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
qualifiers: Array schema[1] items: {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
=== check_unifiable_schemas called with path='qualifiers.items' and 2 schemas:
  Schema[0]: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1]: {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
qualifiers.items: All schemas are records, attempting record unification
qualifiers.items: Attempting to unify 2 record schemas
Schema[0] introduces new field `property`
Schema[0] introduces new field `datavalue`
Schema[0] introduces new field `datatype`
Schema[0] introduces new field `property-labels`
Field `property` compatible (nullable/non-nullable unification)
Promoting scalar on existing side: wrapping string into object under key `datavalue__string`
=== check_unifiable_schemas called with path='qualifiers.items.datavalue' and 2 schemas:
  Schema[0]: {"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["id","labels"],"type":"object"}
  Schema[1]: {"type":"object","properties":{"datavalue__string":{"type":"string"}}}
qualifiers.items.datavalue: All schemas are records, attempting record unification
qualifiers.items.datavalue: Attempting to unify 2 record schemas
Schema[0] introduces new field `id`
Schema[0] introduces new field `labels`
Schema[1] introduces new field `datavalue__string`
Field `id` missing in 1/2 schemas → making nullable
Field `labels` missing in 1/2 schemas → making nullable
Field `datavalue__string` missing in 1/2 schemas → making nullable
qualifiers.items.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
Field `datatype` compatible (nullable/non-nullable unification)
Field `property-labels` compatible (nullable/non-nullable unification)
Field `property` present in all schemas → keeping non-nullable
Field `datavalue` present in all schemas → keeping non-nullable
Field `datatype` present in all schemas → keeping non-nullable
Field `property-labels` present in all schemas → keeping non-nullable
qualifiers.items: Record schemas unified successfully
qualifiers: Successfully unified array items
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "qualifiers" to map with schema:
{
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "property": {
...(58 lines omitted)...
      "datavalue",
      "datatype",
      "property-labels"
    ]
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2]: {"type":"string"}
  Schema[3]: {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":["null","object"]}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: record - {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":["null","object"]}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":["null","object"]})
Checking homogeneity for field "labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":["null","array"],"items":{"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P143":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P4656":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P143","P4656"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(50 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(26 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 2 schemas:
  Schema[0]: {"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1]: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
: All schemas are records, attempting record unification
: Attempting to unify 2 record schemas
Schema[0] introduces new field `property`
Schema[0] introduces new field `datavalue`
Schema[0] introduces new field `datatype`
Schema[0] introduces new field `property-labels`
Field `property` compatible (nullable/non-nullable unification)
Promoting scalar on new side: wrapping string into object under key `datavalue__string`
=== check_unifiable_schemas called with path='.datavalue' and 2 schemas:
  Schema[0]: {"properties":{"id":{"type":"string"},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}},"required":["id","labels"],"type":"object"}
  Schema[1]: {"type":"object","properties":{"datavalue__string":{"type":"string"}}}
.datavalue: All schemas are records, attempting record unification
.datavalue: Attempting to unify 2 record schemas
Schema[0] introduces new field `id`
Schema[0] introduces new field `labels`
Schema[1] introduces new field `datavalue__string`
Field `id` missing in 1/2 schemas → making nullable
Field `labels` missing in 1/2 schemas → making nullable
Field `datavalue__string` missing in 1/2 schemas → making nullable
.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
Field `datatype` compatible (nullable/non-nullable unification)
Field `property-labels` has conflicting object schemas, attempting recursive unify
=== check_unifiable_schemas called with path='.property-labels' and 2 schemas:
  Schema[0]: {"properties":{"nl":{"type":"string"},"de":{"type":"string"}},"required":["de","nl"],"type":"object"}
  Schema[1]: {"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}
.property-labels: All schemas are records, attempting record unification
.property-labels: Attempting to unify 2 record schemas
Schema[0] introduces new field `nl`
Schema[0] introduces new field `de`
Schema[1] introduces new field `en`
Schema[1] introduces new field `ca`
Field `nl` missing in 1/2 schemas → making nullable
Field `de` missing in 1/2 schemas → making nullable
Field `en` missing in 1/2 schemas → making nullable
Field `ca` missing in 1/2 schemas → making nullable
.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
Field `property` present in all schemas → keeping non-nullable
Field `datavalue` present in all schemas → keeping non-nullable
Field `datatype` present in all schemas → keeping non-nullable
Field `property-labels` present in all schemas → keeping non-nullable
: Record schemas unified successfully
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "root" to map with schema:
{
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "property": {
...(72 lines omitted)...
      "datavalue",
      "datatype",
      "property-labels"
    ]
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}}
  Schema 1: {"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}}
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: record - {"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"properties":{"fr":{"type":"string"},"eo":{"type":"string"}},"required":["eo","fr"],"type":["null","object"]})
Checking homogeneity for field "labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","properties":{"nl":{"type":["null","string"]},"de":{"type":["null","string"]},"en":{"type":["null","string"]},"ca":{"type":["null","string"]}}})
Checking homogeneity for field "property-labels" with 4 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]},"rank":{"type":"string"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}},"references":{"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "mainsnak" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='mainsnak' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","additionalProperties":{"type":"string"}}
mainsnak: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","additionalProperties":{"type":"string"}}
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","additionalProperties":{"type":"string"}}
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"claims":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"mainsnak":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]},"rank":{"type":"string"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}},"references":{"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank"]}}}})
Other value recursion: claims
rewrite_objects(field_name=Some("claims"), schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"mainsnak":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]},"rank":{"type":"string"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}},"references":{"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"mainsnak":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]},"rank":{"type":"string"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}},"references":{"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"mainsnak":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]},"rank":{"type":"string"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}},"references":{"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank"]})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}
  Schema[1]: {"type":"string"}
  Schema[2]: {"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}
  Schema[3]: {"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}
: Mixed schema types not supported for unification
  Schema[0] type: record - {"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: map - {"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}
  Schema[3] type: array - {"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "mainsnak" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='mainsnak' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","additionalProperties":{"type":"string"}}
mainsnak: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","additionalProperties":{"type":"string"}}
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","additionalProperties":{"type":"string"}}
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]},"rank":{"type":"string"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}},"references":{"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "mainsnak" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='mainsnak' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","additionalProperties":{"type":"string"}}
mainsnak: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}},"required":["id","labels"]})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","additionalProperties":{"type":"string"}}
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":["null","array"],"items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='' and 4 schemas:
  Schema[0]: {"type":"string"}
  Schema[1]: {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2]: {"type":"string"}
  Schema[3]: {"type":"object","additionalProperties":{"type":"string"}}
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 3 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
=== check_unifiable_schemas called with path='datavalue' and 3 schemas:
  Schema[0]: {"type":["null","string"]}
  Schema[1]: {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2]: {"type":["null","string"]}
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"datavalue__string":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Processed 1 JSON object(s)
