Schema inference config: SchemaInferenceConfig {
    ignore_outer_array: true,
    delimiter: None,
    schema_uri: Some(
        "AUTO",
    ),
    map_threshold: 0,
    map_max_required_keys: None,
    unify_maps: true,
    no_unify: {
... (9 lines truncated) ...
    no_root_map: true,
    avro: true,
    debug: true,
    verbosity: Normal,
}

rewrite_objects(field_name=None, schema={"$schema":"http://json-schema.org/schema#","properties":{"claims":{"properties":{"P487":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["property-labels"],"type":"object"},"qualifiers":{"properties":{"P805":{"type":"array","items":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["property-labels"],"type":"object"}}},"required":["P805"],"type":"object"}},"required":["mainsnak","qualifiers"],"type":"object"}}},"required":["P487"],"type":"object"}},"required":["claims"],"type":"object"})
Checking homogeneity for field "root" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0:
{
  "properties": {
    "P487": {
      "type": "array",
      "items": {
        "properties": {
...(65 lines omitted)...
  },
  "required": [
    "P487"
  ],
  "type": "object"
}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Skipping map conversion: is root and no_root_map=true
Nested value recursion: claims
rewrite_objects(field_name=Some("claims"), schema={"properties":{"P487":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["property-labels"],"type":"object"},"qualifiers":{"properties":{"P805":{"type":"array","items":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["property-labels"],"type":"object"}}},"required":["P805"],"type":"object"}},"required":["mainsnak","qualifiers"],"type":"object"}}},"required":["P487"],"type":"object"})
Checking homogeneity for field "claims" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "mainsnak": {
        "properties": {
...(57 lines omitted)...
      "mainsnak",
      "qualifiers"
    ],
    "type": "object"
  }
}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "claims" to map with schema:
{
  "type": "array",
  "items": {
    "properties": {
      "mainsnak": {
        "properties": {
...(57 lines omitted)...
      "mainsnak",
      "qualifiers"
    ],
    "type": "object"
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["property-labels"],"type":"object"},"qualifiers":{"properties":{"P805":{"type":"array","items":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["property-labels"],"type":"object"}}},"required":["P805"],"type":"object"}},"required":["mainsnak","qualifiers"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["property-labels"],"type":"object"},"qualifiers":{"properties":{"P805":{"type":"array","items":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["property-labels"],"type":"object"}}},"required":["P805"],"type":"object"}},"required":["mainsnak","qualifiers"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"P805":{"type":"array","items":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["property-labels"],"type":"object"}}},"required":["P805"],"type":"object"}
  Schema 1: {"properties":{"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["property-labels"],"type":"object"}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"properties":{"P805":{"type":"array","items":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["property-labels"],"type":"object"}}},"required":["P805"],"type":"object"})
Checking homogeneity for field "qualifiers" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"array","items":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["property-labels"],"type":"object"}}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "qualifiers" to map with schema:
{
  "type": "array",
  "items": {
    "properties": {
      "property-labels": {
        "properties": {
...(14 lines omitted)...
    "required": [
      "property-labels"
    ],
    "type": "object"
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"properties":{"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["property-labels"],"type":"object"})
Checking homogeneity for field "root" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0: {"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "root" to map with schema:
{
  "properties": {
    "en": {
      "type": "string"
    },
    "ca": {
...(3 lines omitted)...
  "required": [
    "ca",
    "en"
  ],
  "type": "object"
}
rewrite_objects(field_name=None, schema={"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "root" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"claims":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}}},"required":["mainsnak","qualifiers"],"type":"object"}}}})
Other value recursion: claims
rewrite_objects(field_name=Some("claims"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}}},"required":["mainsnak","qualifiers"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}}},"required":["mainsnak","qualifiers"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}}},"required":["mainsnak","qualifiers"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Processed 1 JSON object(s)
