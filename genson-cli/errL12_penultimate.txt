Schema inference config: SchemaInferenceConfig {
    ignore_outer_array: true,
    delimiter: None,
    schema_uri: Some(
        "AUTO",
    ),
    map_threshold: 0,
    map_max_required_keys: None,
    unify_maps: true,
    no_unify: {
... (9 lines truncated) ...
    no_root_map: true,
    avro: true,
    debug: true,
    verbosity: Normal,
}

rewrite_objects(field_name=None, schema={"$schema":"http://json-schema.org/schema#","properties":{"claims":{"properties":{"P2347":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fi":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248","P813"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P6385":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P8168":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7502":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P854":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"ko":{"type":"string"},"es":{"type":"string"}},"required":["es","ko"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P813","P854"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}},"P5555":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fr":{"type":"string"}},"required":["en","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P8798":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P8798"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P7783":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ar":{"type":"string"}},"required":["ar","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P11567":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3984":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P9497":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7870":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P2892":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}}},"required":["P11567","P2347","P2892","P3984","P5555","P6385","P7502","P7783","P7870","P8168","P9497"],"type":"object"}},"required":["claims"],"type":"object"})
Checking homogeneity for field "root" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0:
{
  "properties": {
    "P2347": {
      "type": "array",
      "items": {
        "properties": {
...(1131 lines omitted)...
    "P7870",
    "P8168",
    "P9497"
  ],
  "type": "object"
}
Schemas are homogeneous after normalisation
Unified schema contains anyOf, processing unions first
anyOf unification: promoting scalars for field 'labels'
labels: All schemas are records, attempting record unification
labels: Attempting to unify 2 record schemas
labels: Record schemas unified successfully
Successfully unified anyOf schemas
Checking if should convert to map: above_threshold=true, unified_schema=Some
Skipping map conversion: is root and no_root_map=true
Nested value recursion: claims
rewrite_objects(field_name=Some("claims"), schema={"properties":{"P2347":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fi":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248","P813"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P6385":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P8168":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7502":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P854":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"ko":{"type":"string"},"es":{"type":"string"}},"required":["es","ko"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P813","P854"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}},"P5555":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fr":{"type":"string"}},"required":["en","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P8798":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P8798"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P7783":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ar":{"type":"string"}},"required":["ar","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P11567":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3984":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P9497":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7870":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P2892":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}}},"required":["P11567","P2347","P2892","P3984","P5555","P6385","P7502","P7783","P7870","P8168","P9497"],"type":"object"})
Checking homogeneity for field "claims" with 11 schemas
Found 11 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
claims: All schemas are records, attempting record unification
claims: Attempting to unify 11 record schemas
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `references` has conflicting array schemas, attempting recursive unify
claims.references: All schemas are arrays, attempting array unification
claims.references: Attempting to unify 2 array schemas
claims.references.items: All schemas are records, attempting record unification
claims.references.items: Attempting to unify 2 record schemas
claims.references.items: Record schemas unified successfully
claims.references: Successfully unified array items
Field `references` unified successfully after array recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `qualifiers` has conflicting object schemas, attempting recursive unify
claims.qualifiers: All schemas are records, attempting record unification
claims.qualifiers: Attempting to unify 2 record schemas
claims.qualifiers: Record schemas unified successfully
Field `qualifiers` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `mainsnak` has conflicting object schemas, attempting recursive unify
claims.mainsnak: All schemas are records, attempting record unification
claims.mainsnak: Attempting to unify 2 record schemas
Field `property-labels` has conflicting object schemas, attempting recursive unify
claims.mainsnak.property-labels: All schemas are records, attempting record unification
claims.mainsnak.property-labels: Attempting to unify 2 record schemas
claims.mainsnak.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
claims.mainsnak: Record schemas unified successfully
Field `mainsnak` unified successfully after recursion
Field `references` has conflicting array schemas, attempting recursive unify
claims.references: All schemas are arrays, attempting array unification
claims.references: Attempting to unify 2 array schemas
claims.references.items: All schemas are records, attempting record unification
claims.references.items: Attempting to unify 2 record schemas
Field `P248` has conflicting array schemas, attempting recursive unify
claims.references.items.P248: All schemas are arrays, attempting array unification
claims.references.items.P248: Attempting to unify 2 array schemas
claims.references.items.P248.items: All schemas are records, attempting record unification
claims.references.items.P248.items: Attempting to unify 2 record schemas
Field `datavalue` has conflicting object schemas, attempting recursive unify
claims.references.items.P248.items.datavalue: All schemas are records, attempting record unification
claims.references.items.P248.items.datavalue: Attempting to unify 2 record schemas
claims.references.items.P248.items.datavalue.labels: incompatible types (promotion failed):
  existing=Object {
    "properties": Object {
        "fi": Object {
            "type": String("string"),
        },
        "en": Object {
            "type": String("string"),
        },
    },
... (23 lines truncated) ...
        Object {
            "type": String("string"),
        },
    ],
}

claims.references.items.P248.items.datavalue: failed to unify
claims.references.items.P248: Failed to unify array items
claims.references.items.P248: failed to unify arrays
claims.references: Failed to unify array items
claims.references: failed to unify arrays
Not converting to map: no unified schema
Nested value recursion: P2347
rewrite_objects(field_name=Some("P2347"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fi":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248","P813"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fi":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248","P813"],"type":"object"}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fi":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"fi":{"type":"string"}},"required":["en","fi"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"properties":{"P1810":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P1810"],"type":"object"})
Checking homogeneity for field "qualifiers" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(26 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "qualifiers" to map with schema:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(26 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248","P813"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248","P813"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(50 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(54 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 2 record schemas
Field `datavalue` has conflicting object schemas, attempting recursive unify
.datavalue: All schemas are records, attempting record unification
.datavalue: Attempting to unify 2 record schemas
.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after recursion
Field `property-labels` has conflicting object schemas, attempting recursive unify
.property-labels: All schemas are records, attempting record unification
.property-labels: Attempting to unify 2 record schemas
.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
: Record schemas unified successfully
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "root" to map with schema:
{
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "property": {
...(102 lines omitted)...
      "datavalue",
      "datatype",
      "property-labels"
    ]
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":["null","object"]},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"fr":{"type":["null","string"]},"ca":{"type":["null","string"]},"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]}}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":["null","object"]},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"fr":{"type":["null","string"]},"ca":{"type":["null","string"]},"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]}}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","properties":{"fr":{"type":["null","string"]},"ca":{"type":["null","string"]},"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]}}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "id": {
      "type": [
        "null",
...(53 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":["null","object"]},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"type":"object","properties":{"fr":{"type":["null","string"]},"ca":{"type":["null","string"]},"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]}}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":["null","object"]},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":"object"}
  Schema 1: {"type":"integer"}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: record - {"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":["null","object"]}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"properties":{"fi":{"type":"string"},"en":{"type":"string"}},"required":["en","fi"],"type":["null","object"]})
Checking homogeneity for field "labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","properties":{"fr":{"type":["null","string"]},"ca":{"type":["null","string"]},"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]}}})
Checking homogeneity for field "property-labels" with 4 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "id": {
      "type": [
        "null",
...(41 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P6385
rewrite_objects(field_name=Some("P6385"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P8168
rewrite_objects(field_name=Some("P8168"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P7502
rewrite_objects(field_name=Some("P7502"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P854":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"ko":{"type":"string"},"es":{"type":"string"}},"required":["es","ko"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P813","P854"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P854":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"ko":{"type":"string"},"es":{"type":"string"}},"required":["es","ko"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P813","P854"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "P813": {
        "type": "array",
...(104 lines omitted)...
      "P813",
      "P854"
    ],
    "type": "object"
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: array - {"type":"array","items":{"properties":{"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P854":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"ko":{"type":"string"},"es":{"type":"string"}},"required":["es","ko"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P813","P854"],"type":"object"}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P854":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"ko":{"type":"string"},"es":{"type":"string"}},"required":["es","ko"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P813","P854"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P854":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"ko":{"type":"string"},"es":{"type":"string"}},"required":["es","ko"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P813","P854"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(54 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(26 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 2 record schemas
Promoting scalar on new side: wrapping string into object under key `datavalue__string`
.datavalue: All schemas are records, attempting record unification
.datavalue: Attempting to unify 2 record schemas
.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after scalar promotion
Field `property-labels` has conflicting object schemas, attempting recursive unify
.property-labels: All schemas are records, attempting record unification
.property-labels: Attempting to unify 2 record schemas
.property-labels: Record schemas unified successfully
Field `property-labels` unified successfully after recursion
: Record schemas unified successfully
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "root" to map with schema:
{
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "property": {
...(84 lines omitted)...
      "datavalue",
      "datatype",
      "property-labels"
    ]
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]},"ko":{"type":["null","string"]},"es":{"type":["null","string"]}}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","properties":{"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]},"ko":{"type":["null","string"]},"es":{"type":["null","string"]}}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","properties":{"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]},"ko":{"type":["null","string"]},"es":{"type":["null","string"]}}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "time": {
      "type": [
        "null",
...(35 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"type":"object","properties":{"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]},"ko":{"type":["null","string"]},"es":{"type":["null","string"]}}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","properties":{"en":{"type":["null","string"]},"en-ca":{"type":["null","string"]},"ko":{"type":["null","string"]},"es":{"type":["null","string"]}}})
Checking homogeneity for field "property-labels" with 4 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "time": {
      "type": [
        "null",
...(35 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P5555
rewrite_objects(field_name=Some("P5555"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fr":{"type":"string"}},"required":["en","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P8798":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P8798"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fr":{"type":"string"}},"required":["en","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"properties":{"P8798":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P8798"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "properties": {
    "P8798": {
      "type": "array",
      "items": {
        "properties": {
...(60 lines omitted)...
  },
  "required": [
    "P8798"
  ],
  "type": "object"
}
  Schema 1:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"fr":{"type":"string"}},"required":["en","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"fr":{"type":"string"}},"required":["en","fr"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"properties":{"P8798":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P8798"],"type":"object"})
Checking homogeneity for field "qualifiers" with 1 schemas
Unique normalised schemas (1 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(52 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "qualifiers" to map with schema:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(52 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
rewrite_objects(field_name=None, schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}
  Schema 1: {"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"properties":{"en":{"type":"string"},"nl":{"type":"string"},"fa":{"type":"string"}},"required":["en"],"type":"object"})
Checking homogeneity for field "labels" with 3 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"es":{"type":"string"}},"required":["en","es"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P7783
rewrite_objects(field_name=Some("P7783"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ar":{"type":"string"}},"required":["ar","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ar":{"type":"string"}},"required":["ar","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ar":{"type":"string"}},"required":["ar","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ar":{"type":"string"}},"required":["ar","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ar":{"type":"string"}},"required":["ar","en"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P11567
rewrite_objects(field_name=Some("P11567"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"it":{"type":"string"}},"required":["en","it"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P3984
rewrite_objects(field_name=Some("P3984"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"de":{"type":"string"}},"required":["de","en"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P9497
rewrite_objects(field_name=Some("P9497"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P7870
rewrite_objects(field_name=Some("P7870"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ca":{"type":"string"}},"required":["ca","en"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P2892
rewrite_objects(field_name=Some("P2892"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "properties": {
    "property": {
      "type": "string"
    },
    "datavalue": {
...(23 lines omitted)...
    "datavalue",
    "property",
    "property-labels"
  ],
  "type": "object"
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "P248": {
        "type": "array",
...(184 lines omitted)...
    "required": [
      "P248"
    ],
    "type": "object"
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: array - {"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"ru":{"type":"string"}},"required":["en","ru"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(57 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(38 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 2:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(54 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 3 record schemas
Field `datavalue` has conflicting object schemas, attempting recursive unify
.datavalue: All schemas are records, attempting record unification
.datavalue: Attempting to unify 2 record schemas
.datavalue.labels: incompatible types (promotion failed):
  existing=Object {
    "anyOf": Array [
        Object {
            "properties": Object {
                "en": Object {
                    "type": String("string"),
                },
                "nl": Object {
                    "type": String("string"),
... (11 lines truncated) ...
    ],
}
  new=Object {
    "type": String("string"),
}

.datavalue: failed to unify
Not converting to map: no unified schema
Nested value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}
  Schema 1: {"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: unknown - {"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"anyOf":[{"properties":{"en":{"type":"string"},"nl":{"type":"string"}},"required":["en","nl"],"type":"object"},{"type":"string"}]})
Found anyOf union with 2 schemas, attempting unification
anyOf unification: promoting scalars for field 'labels'
labels: All schemas are records, attempting record unification
labels: Attempting to unify 2 record schemas
labels: Record schemas unified successfully
Successfully unified anyOf schemas
rewrite_objects(field_name=Some("labels"), schema={"type":"object","properties":{"en":{"type":["null","string"]},"nl":{"type":["null","string"]},"labels__string":{"type":["null","string"]}}})
Checking homogeneity for field "labels" with 3 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"fr":{"type":"string"},"ca":{"type":"string"}},"required":["ca","fr"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}
  Schema 1: {"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"string"}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "datavalue" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"pt":{"type":"string"}},"required":["en","pt"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}
  Schema 1: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: record - {"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"properties":{"en":{"type":"string"},"en-ca":{"type":"string"}},"required":["en","en-ca"],"type":"object"})
Checking homogeneity for field "property-labels" with 2 schemas
Unique normalised schemas (1 total):
  Schema 0: {"type":"string"}
Schemas are homogeneous after normalisation
Checking if should convert to map: above_threshold=true, unified_schema=Some
Map conversion: no max_required_keys limit, converting to map
Converting field "property-labels" to map with schema:
{
  "type": "string"
}
rewrite_objects(field_name=None, schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(32 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(45 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 2:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(20 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 3 record schemas
.datavalue: incompatible types (promotion failed):
  existing=Object {
    "properties": Object {
        "id": Object {
            "type": String("string"),
        },
        "labels": Object {
            "type": String("object"),
            "additionalProperties": Object {
                "type": String("string"),
... (10 lines truncated) ...
    "type": String("object"),
    "additionalProperties": Object {
        "type": String("string"),
    },
}

Not converting to map: no unified schema
Nested value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P2347":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P6385":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P8168":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7502":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"}},"P5555":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P7783":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P11567":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3984":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P9497":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7870":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P2892":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}}})
Other value recursion: P2347
rewrite_objects(field_name=Some("P2347"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "id": {
      "type": [
        "null",
...(41 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "id": {
      "type": [
        "null",
...(41 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P6385
rewrite_objects(field_name=Some("P6385"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P8168
rewrite_objects(field_name=Some("P8168"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P7502
rewrite_objects(field_name=Some("P7502"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "array",
  "items": {
    "type": "object",
    "additionalProperties": {
      "type": "array",
...(67 lines omitted)...
          "property-labels"
        ]
      }
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: array - {"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "time": {
      "type": [
        "null",
...(35 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "time": {
      "type": [
        "null",
...(35 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P5555
rewrite_objects(field_name=Some("P5555"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "object",
  "additionalProperties": {
    "type": "array",
    "items": {
      "properties": {
...(35 lines omitted)...
        "property-labels"
      ],
      "type": "object"
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P7783
rewrite_objects(field_name=Some("P7783"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P11567
rewrite_objects(field_name=Some("P11567"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P3984
rewrite_objects(field_name=Some("P3984"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P9497
rewrite_objects(field_name=Some("P9497"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P7870
rewrite_objects(field_name=Some("P7870"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P2892
rewrite_objects(field_name=Some("P2892"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "P248": {
        "type": "array",
...(132 lines omitted)...
    "required": [
      "P248"
    ],
    "type": "object"
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: array - {"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(32 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(45 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 2:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(20 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 3 record schemas
.datavalue: incompatible types (promotion failed):
  existing=Object {
    "properties": Object {
        "id": Object {
            "type": String("string"),
        },
        "labels": Object {
            "type": String("object"),
            "additionalProperties": Object {
                "type": String("string"),
... (10 lines truncated) ...
    "type": String("object"),
    "additionalProperties": Object {
        "type": String("string"),
    },
}

Not converting to map: no unified schema
Nested value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(32 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(45 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 2:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(20 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 3 record schemas
.datavalue: incompatible types (promotion failed):
  existing=Object {
    "properties": Object {
        "id": Object {
            "type": String("string"),
        },
        "labels": Object {
            "type": String("object"),
            "additionalProperties": Object {
                "type": String("string"),
... (10 lines truncated) ...
    "type": String("object"),
    "additionalProperties": Object {
        "type": String("string"),
    },
}

Not converting to map: no unified schema
Nested value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"claims":{"properties":{"P2347":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P6385":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P8168":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7502":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"}},"P5555":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P7783":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P11567":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3984":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P9497":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7870":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P2892":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}}},"required":["P11567","P2347","P2892","P3984","P5555","P6385","P7502","P7783","P7870","P8168","P9497"],"type":"object"}})
Other value recursion: claims
rewrite_objects(field_name=Some("claims"), schema={"properties":{"P2347":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P6385":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P8168":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7502":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"}},"P5555":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P7783":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P11567":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3984":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P9497":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7870":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P2892":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}}},"required":["P11567","P2347","P2892","P3984","P5555","P6385","P7502","P7783","P7870","P8168","P9497"],"type":"object"})
Checking homogeneity for field "claims" with 11 schemas
Found 5 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
claims: All schemas are records, attempting record unification
claims: Attempting to unify 11 record schemas
Field `references` has conflicting array schemas, attempting recursive unify
claims.references: All schemas are arrays, attempting array unification
claims.references: Attempting to unify 2 array schemas
claims.references.items: All schemas are maps, attempting map unification
claims.references.items: Attempting to unify 2 map schemas
claims.references.items.additionalProperties: All schemas are arrays, attempting array unification
claims.references.items.additionalProperties: Attempting to unify 2 array schemas
claims.references.items.additionalProperties.items: All schemas are records, attempting record unification
claims.references.items.additionalProperties.items: Attempting to unify 2 record schemas
Field `datavalue` has conflicting object schemas, attempting recursive unify
claims.references.items.additionalProperties.items.datavalue: All schemas are records, attempting record unification
claims.references.items.additionalProperties.items.datavalue: Attempting to unify 2 record schemas
claims.references.items.additionalProperties.items.datavalue: Record schemas unified successfully
Field `datavalue` unified successfully after recursion
claims.references.items.additionalProperties.items: Record schemas unified successfully
claims.references.items.additionalProperties: Successfully unified array items
claims.references.items: Successfully unified map additionalProperties
claims.references: Successfully unified array items
Field `references` unified successfully after array recursion
claims.qualifiers: incompatible types (promotion failed):
  existing=Object {
    "type": String("object"),
    "additionalProperties": Object {
        "type": String("array"),
        "items": Object {
            "properties": Object {
                "property": Object {
                    "type": String("string"),
                },
... (65 lines truncated) ...
            ],
            "type": String("object"),
        },
    },
}

Not converting to map: no unified schema
Nested value recursion: P2347
rewrite_objects(field_name=Some("P2347"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "id": {
      "type": [
        "null",
...(41 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "id": {
      "type": [
        "null",
...(41 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P6385
rewrite_objects(field_name=Some("P6385"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P8168
rewrite_objects(field_name=Some("P8168"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P7502
rewrite_objects(field_name=Some("P7502"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "array",
  "items": {
    "type": "object",
    "additionalProperties": {
      "type": "array",
...(67 lines omitted)...
          "property-labels"
        ]
      }
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: array - {"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "time": {
      "type": [
        "null",
...(35 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "time": {
      "type": [
        "null",
...(35 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P5555
rewrite_objects(field_name=Some("P5555"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "object",
  "additionalProperties": {
    "type": "array",
    "items": {
      "properties": {
...(35 lines omitted)...
        "property-labels"
      ],
      "type": "object"
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P7783
rewrite_objects(field_name=Some("P7783"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P11567
rewrite_objects(field_name=Some("P11567"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P3984
rewrite_objects(field_name=Some("P3984"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P9497
rewrite_objects(field_name=Some("P9497"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P7870
rewrite_objects(field_name=Some("P7870"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: P2892
rewrite_objects(field_name=Some("P2892"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "P248": {
        "type": "array",
...(132 lines omitted)...
    "required": [
      "P248"
    ],
    "type": "object"
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: array - {"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(32 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(45 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 2:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(20 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 3 record schemas
.datavalue: incompatible types (promotion failed):
  existing=Object {
    "properties": Object {
        "id": Object {
            "type": String("string"),
        },
        "labels": Object {
            "type": String("object"),
            "additionalProperties": Object {
                "type": String("string"),
... (10 lines truncated) ...
    "type": String("object"),
    "additionalProperties": Object {
        "type": String("string"),
    },
}

Not converting to map: no unified schema
Nested value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(32 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(45 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 2:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(20 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 3 record schemas
.datavalue: incompatible types (promotion failed):
  existing=Object {
    "properties": Object {
        "id": Object {
            "type": String("string"),
        },
        "labels": Object {
            "type": String("object"),
            "additionalProperties": Object {
                "type": String("string"),
... (10 lines truncated) ...
    "type": String("object"),
    "additionalProperties": Object {
        "type": String("string"),
    },
}

Not converting to map: no unified schema
Nested value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P2347":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}},"P6385":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P8168":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7502":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"}},"P5555":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}},"P7783":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P11567":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P3984":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P9497":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P7870":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}},"P2892":{"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}}})
Other value recursion: P2347
rewrite_objects(field_name=Some("P2347"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","qualifiers","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Found 4 unique normalised schemas (too many to display)
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "id": {
      "type": [
        "null",
...(41 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "id": {
      "type": [
        "null",
...(41 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 8 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":["null","string"]}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":["null","string"]}
  Schema[3] type: scalar - {"type":["null","integer"]}
  Schema[4] type: scalar - {"type":["null","integer"]}
  Schema[5] type: scalar - {"type":["null","integer"]}
  Schema[6] type: scalar - {"type":["null","integer"]}
  Schema[7] type: scalar - {"type":["null","string"]}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":["null","string"]},"labels":{"type":"object","additionalProperties":{"type":"string"}},"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":["null","string"]})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P6385
rewrite_objects(field_name=Some("P6385"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P8168
rewrite_objects(field_name=Some("P8168"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P7502
rewrite_objects(field_name=Some("P7502"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}},"required":["mainsnak","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "array",
  "items": {
    "type": "object",
    "additionalProperties": {
      "type": "array",
...(67 lines omitted)...
          "property-labels"
        ]
      }
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: array - {"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "time": {
      "type": [
        "null",
...(35 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"type":"object","properties":{"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["property","datavalue","datatype","property-labels"]})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1:
{
  "type": "object",
  "properties": {
    "time": {
      "type": [
        "null",
...(35 lines omitted)...
        "null",
        "string"
      ]
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","properties":{"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}}})
Checking homogeneity for field "datavalue" with 7 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Nested value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":["null","string"]},"timezone":{"type":["null","integer"]},"before":{"type":["null","integer"]},"after":{"type":["null","integer"]},"precision":{"type":["null","integer"]},"calendarmodel":{"type":["null","string"]},"datavalue__string":{"type":["null","string"]}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":["null","string"]})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":["null","integer"]})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":["null","integer"]})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":["null","integer"]})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":["null","integer"]})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":["null","string"]})
Other value recursion: datavalue__string
rewrite_objects(field_name=Some("datavalue__string"), schema={"type":["null","string"]})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P5555
rewrite_objects(field_name=Some("P5555"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}},"required":["mainsnak","qualifiers","rank"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "object",
  "additionalProperties": {
    "type": "array",
    "items": {
      "properties": {
...(35 lines omitted)...
        "property-labels"
      ],
      "type": "object"
    }
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
Not unifying: one or more fields in no_unify: ["qualifiers"]
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"qualifiers":{"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: qualifiers
rewrite_objects(field_name=Some("qualifiers"), schema={"type":"object","additionalProperties":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P7783
rewrite_objects(field_name=Some("P7783"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P11567
rewrite_objects(field_name=Some("P11567"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P3984
rewrite_objects(field_name=Some("P3984"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P9497
rewrite_objects(field_name=Some("P9497"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P7870
rewrite_objects(field_name=Some("P7870"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}},"required":["mainsnak","rank"],"type":"object"})
Checking homogeneity for field "root" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: P2892
rewrite_objects(field_name=Some("P2892"), schema={"type":"array","items":{"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}},"required":["mainsnak","rank","references"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "P248": {
        "type": "array",
...(132 lines omitted)...
    "required": [
      "P248"
    ],
    "type": "object"
  }
}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: record - {"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}
  Schema[1] type: scalar - {"type":"string"}
  Schema[2] type: array - {"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}
Not converting to map: no unified schema
Nested value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Nested value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(32 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(45 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 2:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(20 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 3 record schemas
.datavalue: incompatible types (promotion failed):
  existing=Object {
    "properties": Object {
        "id": Object {
            "type": String("string"),
        },
        "labels": Object {
            "type": String("object"),
            "additionalProperties": Object {
                "type": String("string"),
... (10 lines truncated) ...
    "type": String("object"),
    "additionalProperties": Object {
        "type": String("string"),
    },
}

Not converting to map: no unified schema
Nested value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"mainsnak":{"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"},"rank":{"type":"string"},"references":{"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}}})
Other value recursion: mainsnak
rewrite_objects(field_name=Some("mainsnak"), schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"string"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Hit force field: mainsnak=record
Force field induced recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Force field induced recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"string"})
Force field induced recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Force field induced recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: rank
rewrite_objects(field_name=Some("rank"), schema={"type":"string"})
Other value recursion: references
rewrite_objects(field_name=Some("references"), schema={"type":"array","items":{"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}},"required":["P248"],"type":"object"})
Checking homogeneity for field "root" with 3 schemas
Unique normalised schemas (3 total):
  Schema 0:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(32 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 1:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(45 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
  Schema 2:
{
  "type": "array",
  "items": {
    "properties": {
      "property": {
        "type": "string"
...(20 lines omitted)...
      "property",
      "property-labels"
    ],
    "type": "object"
  }
}
Schemas not homogeneous, attempting unification
: All schemas are records, attempting record unification
: Attempting to unify 3 record schemas
.datavalue: incompatible types (promotion failed):
  existing=Object {
    "properties": Object {
        "id": Object {
            "type": String("string"),
        },
        "labels": Object {
            "type": String("object"),
            "additionalProperties": Object {
                "type": String("string"),
... (10 lines truncated) ...
    "type": String("object"),
    "additionalProperties": Object {
        "type": String("string"),
    },
}

Not converting to map: no unified schema
Nested value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"P248":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P887":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}},"P813":{"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}}})
Other value recursion: P248
rewrite_objects(field_name=Some("P248"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["id","labels"],"type":"object"})
Checking homogeneity for field "datavalue" with 2 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Nested value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"id":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: id
rewrite_objects(field_name=Some("id"), schema={"type":"string"})
Other value recursion: labels
rewrite_objects(field_name=Some("labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P887
rewrite_objects(field_name=Some("P887"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: map - {"type":"object","additionalProperties":{"type":"string"}}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"type":"object","additionalProperties":{"type":"string"}},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: P813
rewrite_objects(field_name=Some("P813"), schema={"type":"array","items":{"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"}})
Nested value recursion: items
rewrite_objects(field_name=None, schema={"properties":{"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}},"required":["datatype","datavalue","property","property-labels"],"type":"object"})
Checking homogeneity for field "root" with 4 schemas
Unique normalised schemas (3 total):
  Schema 0: {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema 1: {"type":"object","additionalProperties":{"type":"string"}}
  Schema 2: {"type":"string"}
Schemas not homogeneous, attempting unification
: Mixed schema types not supported for unification
  Schema[0] type: scalar - {"type":"string"}
  Schema[1] type: record - {"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"}
  Schema[2] type: scalar - {"type":"string"}
  Schema[3] type: map - {"type":"object","additionalProperties":{"type":"string"}}
Not converting to map: no unified schema
Nested value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Nested value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Nested value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Nested value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"property":{"type":"string"},"datavalue":{"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"},"datatype":{"type":"string"},"property-labels":{"type":"object","additionalProperties":{"type":"string"}}})
Other value recursion: property
rewrite_objects(field_name=Some("property"), schema={"type":"string"})
Other value recursion: datavalue
rewrite_objects(field_name=Some("datavalue"), schema={"properties":{"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}},"required":["after","before","calendarmodel","precision","time","timezone"],"type":"object"})
Checking homogeneity for field "datavalue" with 6 schemas
Unique normalised schemas (2 total):
  Schema 0: {"type":"integer"}
  Schema 1: {"type":"string"}
Schemas not homogeneous, attempting unification
datavalue: All schemas are scalars, attempting scalar unification
datavalue: Cannot unify incompatible scalar types: ["integer", "string"]
Not converting to map: no unified schema
Nested value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Nested value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Nested value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Nested value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Nested value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Nested value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: properties
rewrite_objects(field_name=Some("properties"), schema={"time":{"type":"string"},"timezone":{"type":"integer"},"before":{"type":"integer"},"after":{"type":"integer"},"precision":{"type":"integer"},"calendarmodel":{"type":"string"}})
Other value recursion: time
rewrite_objects(field_name=Some("time"), schema={"type":"string"})
Other value recursion: timezone
rewrite_objects(field_name=Some("timezone"), schema={"type":"integer"})
Other value recursion: before
rewrite_objects(field_name=Some("before"), schema={"type":"integer"})
Other value recursion: after
rewrite_objects(field_name=Some("after"), schema={"type":"integer"})
Other value recursion: precision
rewrite_objects(field_name=Some("precision"), schema={"type":"integer"})
Other value recursion: calendarmodel
rewrite_objects(field_name=Some("calendarmodel"), schema={"type":"string"})
Other value recursion: datatype
rewrite_objects(field_name=Some("datatype"), schema={"type":"string"})
Other value recursion: property-labels
rewrite_objects(field_name=Some("property-labels"), schema={"type":"object","additionalProperties":{"type":"string"}})
Other value recursion: additionalProperties
rewrite_objects(field_name=Some("additionalProperties"), schema={"type":"string"})
Processed 1 JSON object(s)
